{"version":3,"sources":["component/CardData.js","component/Card.js","component/CardDeck.js","component/ScoreBoard.js","component/Reset.js","GameBoard.js","index.js"],"names":["card1","image","imageAlt","id","card2","card3","card4","card5","card6","card7","card8","card9","card10","card11","card12","card13","card14","card15","card16","card17","card18","card19","card20","card21","card22","card23","card24","card25","card26","card27","card28","card29","card30","Card","props","className","onClick","selected","index","src","alt","CardDeck","displayCards","array","i","length","j","Math","floor","random","shuffle","map","key","ScoreBoard","score","bestScore","Reset","reset","GameBoard","useState","setScore","setBestScore","setSelected","restart","Array","fill","updateSelected","selectedArray","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.981b16c1.chunk.js","sourcesContent":["export const card1 = {\n  image: 'images/image-1.png',\n  imageAlt: 'image-1',\n  id: 0,\n};\n\nexport const card2 = {\n  image: 'images/image-2.png',\n  imageAlt: 'image-2',\n  id: 1,\n};\n\nexport const card3 = {\n  image: 'images/image-3.png',\n  imageAlt: 'image-3',\n  id: 2,\n};\n\nexport const card4 = {\n  image: 'images/image-4.png',\n  imageAlt: 'image-4',\n  id: 3,\n};\n\nexport const card5 = {\n  image: 'images/image-5.png',\n  imageAlt: 'image-5',\n  id: 4,\n};\n\nexport const card6 = {\n  image: 'images/image-6.png',\n  imageAlt: 'image-6',\n  id: 5,\n};\n\nexport const card7 = {\n  image: 'images/image-7.png',\n  imageAlt: 'image-7',\n  id: 6,\n};\n\nexport const card8 = {\n  image: 'images/image-8.png',\n  imageAlt: 'image-8',\n  id: 7,\n};\n\nexport const card9 = {\n  image: 'images/image-9.png',\n  imageAlt: 'image-9',\n  id: 8,\n};\n\nexport const card10 = {\n  image: 'images/image-10.png',\n  imageAlt: 'image-10',\n  id: 9,\n};\n\nexport const card11 = {\n  image: 'images/image-11.png',\n  imageAlt: 'image-11',\n  id: 10,\n};\n\nexport const card12 = {\n  image: 'images/image-12.png',\n  imageAlt: 'image-12',\n  id: 11,\n};\n\nexport const card13 = {\n  image: 'images/image-13.png',\n  imageAlt: 'image-13',\n  id: 12,\n};\n\nexport const card14 = {\n  image: 'images/image-14.png',\n  imageAlt: 'image-14',\n  id: 13,\n};\n\nexport const card15 = {\n  image: 'images/image-15.png',\n  imageAlt: 'image-15',\n  id: 14,\n};\n\nexport const card16 = {\n  image: 'images/image-16.png',\n  imageAlt: 'image-16',\n  id: 15,\n};\n\nexport const card17 = {\n  image: 'images/image-17.png',\n  imageAlt: 'image-17',\n  id: 16,\n};\n\nexport const card18 = {\n  image: 'images/image-18.png',\n  imageAlt: 'image-18',\n  id: 17,\n};\n\nexport const card19 = {\n  image: 'images/image-19.png',\n  imageAlt: 'image-19',\n  id: 18,\n};\n\nexport const card20 = {\n  image: 'images/image-20.png',\n  imageAlt: 'image-20',\n  id: 19,\n};\n\nexport const card21 = {\n  image: 'images/image-21.png',\n  imageAlt: 'image-21',\n  id: 20,\n};\n\nexport const card22 = {\n  image: 'images/image-22.png',\n  imageAlt: 'image-22',\n  id: 21,\n};\n\nexport const card23 = {\n  image: 'images/image-23.png',\n  imageAlt: 'image-23',\n  id: 22,\n};\n\nexport const card24 = {\n  image: 'images/image-24.png',\n  imageAlt: 'image-24',\n  id: 23,\n};\n\nexport const card25 = {\n  image: 'images/image-25.png',\n  imageAlt: 'image-25',\n  id: 24,\n};\n\nexport const card26 = {\n  image: 'images/image-26.png',\n  imageAlt: 'image-26',\n  id: 25,\n};\n\nexport const card27 = {\n  image: 'images/image-27.png',\n  imageAlt: 'image-27',\n  id: 26,\n};\n\nexport const card28 = {\n  image: 'images/image-28.png',\n  imageAlt: 'image-28',\n  id: 27,\n};\n\nexport const card29 = {\n  image: 'images/image-29.png',\n  imageAlt: 'image-29',\n  id: 28,\n};\n\nexport const card30 = {\n  image: 'images/image-30.png',\n  imageAlt: 'image-30',\n  id: 29,\n};\n","import React from 'react';\nimport './Card.css';\n\nfunction Card(props) {\n  const clicked = () => {\n    props.onClick();\n    props.selected(props.index);\n  };\n  return (\n    <div className=\"cards\" onClick={clicked}>\n      <img src={props.image} alt={props.imageAlt} />\n    </div>\n  );\n}\n\nexport default Card;\n","import React from 'react';\nimport {\n  card1,\n  card2,\n  card3,\n  card4,\n  card5,\n  card6,\n  card7,\n  card8,\n  card9,\n  card10,\n  card11,\n  card12,\n  card13,\n  card14,\n  card15,\n  card16,\n  card17,\n  card18,\n  card19,\n  card20,\n  card21,\n  card22,\n  card23,\n  card24,\n  card25,\n  card26,\n  card27,\n  card28,\n  card29,\n  card30,\n} from './CardData';\nimport Card from './Card';\nimport './CardDeck.css';\n\nexport default function CardDeck(props) {\n  const deck = [\n    card1,\n    card2,\n    card3,\n    card4,\n    card5,\n    card6,\n    card7,\n    card8,\n    card9,\n    card10,\n    card11,\n    card12,\n    card13,\n    card14,\n    card15,\n    card16,\n    card17,\n    card18,\n    card19,\n    card20,\n    card21,\n    card22,\n    card23,\n    card24,\n    card25,\n    card26,\n    card27,\n    card28,\n    card29,\n    card30,\n  ];\n  const shuffle = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const displayCards = shuffle(deck).map((id, index) => {\n    return (\n      <Card\n        {...id}\n        index={id.id}\n        key={index}\n        onClick={props.onClick}\n        selected={props.selected}\n      />\n    );\n  });\n\n  return <div id=\"layout\">{displayCards}</div>;\n}\n","import React from 'react';\nimport './ScoreBoard.css';\n\nfunction ScoreBoard(props) {\n  return (\n    <div>\n      <div id=\"text\">\n        <p>The goal of the game is to not choose the same color twice.</p>\n        <p>\n          Your current score is {props.score} and your best score is{' '}\n          {props.bestScore}.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport { ScoreBoard };\n","import React from 'react';\nimport './Reset.css';\n\nexport default function Reset(props) {\n  const resetter = () => {\n    props.reset();\n  };\n\n  return (\n    <div id=\"reset\">\n      <button onClick={resetter}>Restart</button>\n    </div>\n  );\n}\n","import CardDeck from './component/CardDeck';\nimport { ScoreBoard } from './component/ScoreBoard';\nimport React, { useState } from 'react';\nimport Reset from './component/Reset';\n\nfunction GameBoard() {\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [selected, setSelected] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n  ]);\n\n  const restart = () => {\n    const length = new Array(selected.length);\n    setSelected(length.fill(false, 0));\n    setScore(0);\n    setBestScore((bestScore) => bestScore - 1);\n    return;\n  };\n\n  const updateSelected = (index) => {\n    const selectedArray = selected;\n    if (selectedArray[index] === true) {\n      alert('Game over. Looks like that color was chosen already.');\n      restart();\n    } else {\n      selectedArray[index] = true;\n      setSelected(selectedArray);\n    }\n  };\n\n  const updateScore = () => {\n    setScore((score) => score + 1);\n    if (bestScore <= score) {\n      setBestScore((bestScore) => bestScore + 1);\n    }\n  };\n\n  return (\n    <div>\n      <ScoreBoard score={score} bestScore={bestScore} />\n      <Reset score={score} reset={restart} />\n      <CardDeck\n        onClick={updateScore}\n        selected={(index) => updateSelected(index)}\n      />\n    </div>\n  );\n}\n\nexport default GameBoard;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GameBoard from './GameBoard';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}